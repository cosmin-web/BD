-- Generated by Oracle SQL Developer Data Modeler 24.3.0.240.1210
--   at:        2024-12-20 15:47:34 AZT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE accesorii (
    id_accesoriu NUMBER(12) NOT NULL,
    denumire     VARCHAR2(30) NOT NULL,
    tarif        NUMBER(4) NOT NULL,
    stoc         NUMBER(2)
)
LOGGING;

ALTER TABLE accesorii
    ADD CONSTRAINT accesorii_id_accesoriu_ck CHECK ( length(id_accesoriu) = 12 );

ALTER TABLE accesorii
    ADD CONSTRAINT accesorii_denumire_ck
        CHECK ( denumire IN ( 'BRELOC', 'CABLU INCARCARE', 'GPS', 'ROVINIETA ELECTRONICA', 'SCAUN PENTRU COPII',
                              'SUPORT PENTRU TELEFON' ) );

ALTER TABLE accesorii
    ADD CONSTRAINT accesorii_tarif_ck
        CHECK ( tarif IN ( 30, 40, 50, 150, 500,
                           1000 ) );

ALTER TABLE accesorii ADD CHECK ( stoc >= 0 );

ALTER TABLE accesorii ADD CONSTRAINT accesorii_pk PRIMARY KEY ( id_accesoriu );

CREATE TABLE clienti (
    id_client NUMBER(13) NOT NULL,
    serie_ci  CHAR(2) NOT NULL,
    numar_ci  NUMBER(6) NOT NULL,
    nume      VARCHAR2(20) NOT NULL,
    prenume   VARCHAR2(20) NOT NULL
)
LOGGING;

ALTER TABLE clienti
    ADD CONSTRAINT clienti_id_client_ck
        CHECK ( REGEXP_LIKE ( id_client,
                              '^\d{13}$' )
                AND substr(id_client, 1, 1) IN ( '1', '2', '5', '6' )
                AND TO_NUMBER(substr(id_client, 4, 2)) BETWEEN 1 AND 12
                AND ( ( TO_NUMBER(substr(id_client, 4, 2)) IN ( 1, 3, 5, 7, 8,
                                                                10, 12 )
                        AND TO_NUMBER(substr(id_client, 6, 2)) BETWEEN 1 AND 31 )
                      OR ( TO_NUMBER(substr(id_client, 4, 2)) IN ( 4, 6, 9, 11 )
                           AND TO_NUMBER(substr(id_client, 6, 2)) BETWEEN 1 AND 30 )
                      OR ( TO_NUMBER(substr(id_client, 4, 2)) = 2
                           AND ( ( substr(id_client, 1, 1) IN ( '1', '2' )
                                   AND MOD(TO_NUMBER('1900'
                                                     || substr(id_client, 2, 2)),
                                           4) = 0
                                   AND ( MOD(TO_NUMBER('1900'
                                                       || substr(id_client, 2, 2)),
                                             100) != 0
                                         OR MOD(TO_NUMBER('1900'
                                                          || substr(id_client, 2, 2)),
                                                400) = 0 )
                                   AND TO_NUMBER(substr(id_client, 6, 2)) BETWEEN 1 AND 29 )
                                 OR ( substr(id_client, 1, 1) IN ( '5', '6' )
                                      AND MOD(TO_NUMBER('2000'
                                                        || substr(id_client, 2, 2)),
                                              4) = 0
                                      AND ( MOD(TO_NUMBER('2000'
                                                          || substr(id_client, 2, 2)),
                                                100) != 0
                                            OR MOD(TO_NUMBER('2000'
                                                             || substr(id_client, 2, 2)),
                                                   400) = 0 )
                                      AND TO_NUMBER(substr(id_client, 6, 2)) BETWEEN 1 AND 29 )
                                 OR ( TO_NUMBER(substr(id_client, 6, 2)) BETWEEN 1 AND 28 ) ) ) ) );

ALTER TABLE clienti
    ADD CONSTRAINT clienti_serie_ci_ck CHECK ( serie_ci IN ( 'IZ', 'MZ' ) );

ALTER TABLE clienti
    ADD CONSTRAINT clienti_numar_ci_ck CHECK ( length(numar_ci) = 6 );

ALTER TABLE clienti
    ADD CONSTRAINT clienti_nume_ck CHECK ( REGEXP_LIKE ( nume,
                                                         '^[A-Za-z]+$' ) );

ALTER TABLE clienti
    ADD CONSTRAINT clienti_prenume_ck CHECK ( REGEXP_LIKE ( prenume,
                                                            '^[A-Za-z -]+$' ) );

ALTER TABLE clienti ADD CONSTRAINT clienti_pk PRIMARY KEY ( id_client );

ALTER TABLE clienti ADD CONSTRAINT clienti_serie_ci_numar_ci_un UNIQUE ( serie_ci,
                                                                         numar_ci );

CREATE TABLE contacte (
    strada    VARCHAR2(50) NOT NULL,
    oras      VARCHAR2(20) NOT NULL,
    telefon   CHAR(10),
    email     VARCHAR2(30),
    id_client NUMBER(13) NOT NULL
)
LOGGING;

ALTER TABLE contacte
    ADD CONSTRAINT contacte_oras_ck CHECK ( REGEXP_LIKE ( oras,
                                                          '^[A-Za-z0-9 -]+$' ) );

ALTER TABLE contacte
    ADD CONSTRAINT contacte_telefon_ck CHECK ( REGEXP_LIKE ( telefon,
                                                             '^07[0-9]{8}$' ) );

ALTER TABLE contacte
    ADD CONSTRAINT contacte_email_ck CHECK ( REGEXP_LIKE ( email,
                                                           '[a-z0-9._%-]+@[a-z0-9._%-]+\.[a-z]{2,4}' ) );

ALTER TABLE contacte ADD CONSTRAINT contacte_pk PRIMARY KEY ( id_client );

ALTER TABLE contacte ADD CONSTRAINT contacte_email_un UNIQUE ( email );

ALTER TABLE contacte ADD CONSTRAINT contacte_telefon_un UNIQUE ( telefon );

CREATE TABLE inchirieri (
    data_inceput DATE NOT NULL,
    data_sfarsit DATE NOT NULL,
    cost_total   NUMBER(6) NOT NULL,
    id_client    NUMBER(13) NOT NULL,
    id_masina    CHAR(17) NOT NULL
)
LOGGING;

ALTER TABLE inchirieri ADD CONSTRAINT inchirieri_data_sfarsit_ck CHECK ( data_inceput < data_sfarsit );

ALTER TABLE inchirieri
    ADD CONSTRAINT inchirieri_pk PRIMARY KEY ( id_client,
                                               data_inceput,
                                               id_masina );

CREATE TABLE masini (
    id_masina       CHAR(17) NOT NULL,
    caroserie       VARCHAR2(5) NOT NULL,
    combustibil     VARCHAR2(9) NOT NULL,
    tarif           NUMBER(4) NOT NULL,
    disponibilitate NUMBER(1) NOT NULL
)
LOGGING;

ALTER TABLE masini
    ADD CONSTRAINT masini_id_masina_ck CHECK ( REGEXP_LIKE ( id_masina,
                                                             '^[A-HJ-NPR-Z0-9]{17}$' ) );

ALTER TABLE masini
    ADD CONSTRAINT masini_caroserie_ck
        CHECK ( caroserie IN ( 'ORAS', 'SPORT', 'SUV', 'TEREN' ) );

ALTER TABLE masini
    ADD CONSTRAINT masini_combustibil_ck
        CHECK ( combustibil IN ( 'BENZINA', 'ELECTRIC', 'HIBRID', 'MOTORINA' ) );

ALTER TABLE masini
    ADD CONSTRAINT masini_tarif_ck
        CHECK ( tarif IN ( 500, 1000, 1500, 2000 ) );

ALTER TABLE masini
    ADD CONSTRAINT masini_disponibilitate_ck CHECK ( disponibilitate IN ( 0, 1 ) );

ALTER TABLE masini ADD CONSTRAINT masini_pk PRIMARY KEY ( id_masina );

CREATE TABLE optiuni (
    id_client    NUMBER(13) NOT NULL,
    data_inceput DATE NOT NULL,
    id_masina    CHAR(17) NOT NULL,
    id_accesoriu NUMBER(12) NOT NULL
)
LOGGING;

ALTER TABLE optiuni
    ADD CONSTRAINT optiuni_pk
        PRIMARY KEY ( id_client,
                      data_inceput,
                      id_masina,
                      id_accesoriu );

ALTER TABLE contacte
    ADD CONSTRAINT contacte_clienti_fk
        FOREIGN KEY ( id_client )
            REFERENCES clienti ( id_client )
            NOT DEFERRABLE;

ALTER TABLE inchirieri
    ADD CONSTRAINT inchirieri_clienti_fk
        FOREIGN KEY ( id_client )
            REFERENCES clienti ( id_client )
            NOT DEFERRABLE;

ALTER TABLE inchirieri
    ADD CONSTRAINT inchirieri_masini_fk
        FOREIGN KEY ( id_masina )
            REFERENCES masini ( id_masina )
            NOT DEFERRABLE;

ALTER TABLE optiuni
    ADD CONSTRAINT optiuni_accesorii_fk
        FOREIGN KEY ( id_accesoriu )
            REFERENCES accesorii ( id_accesoriu )
            NOT DEFERRABLE;

ALTER TABLE optiuni
    ADD CONSTRAINT optiuni_inchirieri_fk
        FOREIGN KEY ( id_client,
                      data_inceput,
                      id_masina )
            REFERENCES inchirieri ( id_client,
                                    data_inceput,
                                    id_masina )
            NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER inchirieri_data_trg 
    BEFORE INSERT OR UPDATE ON Inchirieri 
    FOR EACH ROW 
BEGIN
    IF( :new.data_inceput <= SYSDATE ) THEN
        RAISE_APPLICATION_ERROR( -20001,
            'Data invalida: ' || TO_CHAR( :new.data_inceput, 'DD.MM.YYYY HH24:MI:SS' ) || 
            ' trebuie sa fie mai mare decat data curenta.' );
    END IF;
END;
/ ;
/

CREATE SEQUENCE accesorii_id_accesoriu_seq START WITH 100000000000 MINVALUE 100000000000 MAXVALUE 100000000200 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER accesorii_id_accesoriu_trg BEFORE
    INSERT ON accesorii
    FOR EACH ROW
    WHEN ( new.id_accesoriu IS NULL )
BEGIN
    :new.id_accesoriu := accesorii_id_accesoriu_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             6
-- CREATE INDEX                             0
-- ALTER TABLE                             32
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           2
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          1
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
